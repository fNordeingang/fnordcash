merge into
  TC_BANKBUCHUNG T
using
(
  select
    AUFTRAGSKONTO,
    to_date(BUCHUNGSTAG, 'DD.MM.YYYY') as BUCHUNGSTAG,
    to_date(VALUTADATUM, 'DD.MM.YYYY') as VALUTADATUM,
    BUCHUNGSTEXT,
    VERWENDUNGSZWECK,
    BEGUENSTIGTER,
    KONTONUMMER,
    BLZ,
    BETRAG::money as BETRAG,
    WAEHRUNG,
    INFO
  from
    TS_BANKBUCHUNG
) S
on
(
  T.AUFTRAGSKONTO    = S.AUFTRAGSKONTO
  T.BUCHUNGSTAG      = S.BUCHUNGSTAG
  T.VALUTADATUM      = S.VALUTADATUM
  T.BUCHUNGSTEXT     = S.BUCHUNGSTEXT
  T.VERWENDUNGSZWECK = S.VERWENDUNGSZWECK
  T.BEGUENSTIGTER    = S.BEGUENSTIGTER
  T.KONTONUMMER      = S.KONTONUMMER
  T.BLZ              = S.BLZ
  T.BETRAG           = S.BETRAG
  T.WAEHRUNG         = S.WAEHRUNG
  T.INFO             = S.INFO
)
when not matched then insert
(
  ID,
  AUFTRAGSKONTO,
  BUCHUNGSTAG,
  VALUTADATUM,
  BUCHUNGSTEXT,
  VERWENDUNGSZWECK,
  BEGUENSTIGTER,
  KONTONUMMER,
  BLZ,
  BETRAG,
  WAEHRUNG,
  INFO
)
values
(
  nextval('SQ_BANKBUCHUNG_ID'),
  S.AUFTRAGSKONTO,
  S.BUCHUNGSTAG,
  S.VALUTADATUM,
  S.BUCHUNGSTEXT,
  S.VERWENDUNGSZWECK,
  S.BEGUENSTIGTER,
  S.KONTONUMMER,
  S.BLZ,
  S.BETRAG,
  S.WAEHRUNG,
  S.INFO
);
